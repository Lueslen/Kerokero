1. CRIE UM CODIGO QUE APRESENTE UMA HERANÇA.

public class Produto {
  public double valorCompra;
  protected double valorVenda;
}

public class Computador extends Produto {
  private String processador;
}


2. CRIE UM CODIGO QUE APRESENTE UMA IMPLEMENTAÇÃO DE INTERFACE.

interface Animal {
  public void animalSound(); // interface method (does not have a body)
  public void sleep(); // interface method (does not have a body)
}

class Pig implements Animal {
  public void animalSound() {
    System.out.println("The pig says: wee wee");
  }
  
  public void sleep() {
    System.out.println("Zzz");
  }
  
}

class Main {
  public static void main(String[] args) {
    Pig myPig = new Pig();
    myPig.animalSound();
    myPig.sleep();
  }
  
}


3. CRIE UM CODIGO QUE APRESENTE UMA SOBRECARGA DE MÉTODO.

public class calculadora{
 public int calcula( int a, int b){
    return a+b;
  }
  public double calcula( double a, double b){
     return a+b;
  }
   public String calcula( String a, String b){
     return a+b;
}


4. CRIE UM CODIGO QUE APRESENTE UMA RELAÇÃO DE COMPOSIÇÃO.




5. APRESENTE OS CÓDIGOS DOS EXERCÍCIOS ANTERIORES EM UM DIAGRAMA DE CLASSES DA UML.




